#!/bin/bash

error () {
  echo $1
  exit 1
}

if [ -z "$FULCRUM_ORG" ]; then
  error "FULCRUM_ORG must specify the organization name"
fi

if [ -z "$FULCRUM_TOKEN" ]; then
  error "FULCRUM_TOKEN must specify the API token"
fi

export FULCRUM_REPORTS_ENABLED=${FULCRUM_REPORTS_ENABLED:=no}
export FULCRUM_REPORTS_ARGS=${FULCRUM_REPORTS_ARGS:="--file-name id"}

export FULCRUM_MEDIA_ENABLED=${FULCRUM_MEDIA_ENABLED:=no}
export FULCRUM_MEDIA_ARGS=${FULCRUM_MEDIA_ARGS:=""}

export FULCRUM_GPKG_ENABLED=${FULCRUM_GPKG_ENABLED:=no}
export FULCRUM_GPKG_NAME=${FULCRUM_GPKG_NAME:="$FULCRUM_ORG"}
export FULCRUM_GPKG_ARGS=${FULCRUM_GPKG_ARGS:="--gpkg-underscore-names --gpkg-drop false --no-gpkg-user-info --no-gpkg-joined-names"}

export FULCRUM_PG_ENABLED=${FULCRUM_PG_ENABLED:=no}
export FULCRUM_PG_ARGS=${FULCRUM_PG_ARGS:="--pg-underscore-names"}

export FULCRUM_MSSQL_ENABLED=${FULCRUM_MSSQL_ENABLED:=no}
export FULCRUM_MSSQL_ARGS=${FULCRUM_MSSQL_ARGS:="--mssql-underscore-names"}

export FULCRUM_S3_SYNC_ENABLED=${FULCRUM_S3_SYNC_ENABLED:=no}

# assign the awscli-specific variables
export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:=$FULCRUM_AWS_ACCESS_KEY_ID}
export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:=$FULCRUM_AWS_SECRET_ACCESS_KEY}

# assign the psql-specific variables
export PGHOST=${PGHOST:=$FULCRUM_PG_HOST}
export PGPORT=${PGPORT:=$FULCRUM_PG_PORT}
export PGDATABASE=${PGDATABASE:=$FULCRUM_PG_DATABASE}
export PGUSER=${PGUSER:=$FULCRUM_PG_USER}
export PGPASSWORD=${PGPASSWORD:=$FULCRUM_PG_PASSWORD}

export PLUGIN_PATH=/root/.fulcrum/plugins
export PLUGIN_PATH_ALL=/root/.fulcrum/plugins-all

mkdir -p $PLUGIN_PATH_ALL

disable_plugin () {
  rm -f $PLUGIN_PATH/fulcrum-desktop-$1
}

enable_plugin () {
  ln -s $PLUGIN_PATH_ALL/fulcrum-desktop-$1 $PLUGIN_PATH/fulcrum-desktop-$1
}

disable_plugin 'postgres'
disable_plugin 'mssql'
disable_plugin 'media'
disable_plugin 'reports'
disable_plugin 'geopackage'

if [[ $FULCRUM_PG_ENABLED != "no" ]]; then
  echo "Connecting to psql $PGHOST:$PGPORT@$PGDATABASE as $PGUSER"

  /usr/local/bin/wait-for-postgres

  psql -d postgres -c "CREATE DATABASE $PGDATABASE;"

  psql -d $PGDATABASE -c 'CREATE EXTENSION IF NOT EXISTS postgis;'

  enable_plugin 'postgres'
fi

if [[ $FULCRUM_MSSQL_ENABLED != "no" ]]; then
  enable_plugin 'mssql'
fi

if [[ $FULCRUM_MEDIA_ENABLED != "no" ]]; then
  enable_plugin 'media'
fi

if [[ $FULCRUM_REPORTS_ENABLED != "no" ]]; then
  enable_plugin 'reports'
  mkdir -p /data/templates
fi

if [[ $FULCRUM_GPKG_ENABLED != "no" ]]; then
  enable_plugin 'geopackage'
  mkdir -p /data/geopackage
fi

mkdir -p $FULCRUM_DATA_PATH

fulcrum setup

fulcrum sync --simple-output $FULCRUM_PG_ARGS $FULCRUM_MSSQL_ARGS $FULCRUM_SYNC_ARGS

if [[ $FULCRUM_MEDIA_ENABLED != "no" ]]; then
  echo "Processing media..."

  fulcrum media $FULCRUM_MEDIA_ARGS
fi

if [[ $FULCRUM_REPORTS_ENABLED != "no" ]]; then
  echo "Processing reports..."

  if [ -f /data/templates/template.ejs ]; then
    export FULCRUM_REPORTS_TEMPLATE="/data/templates/template.ejs"
  fi

  if [ -f /data/templates/header.ejs ]; then
    export FULCRUM_REPORTS_HEADER="/data/templates/header.ejs"
  fi

  if [ -f /data/templates/footer.ejs ]; then
    export FULCRUM_REPORTS_FOOTER="/data/templates/footer.ejs"
  fi

  fulcrum reports $FULCRUM_REPORTS_ARGS
fi

if [[ $FULCRUM_GPKG_ENABLED != "no" ]]; then
  echo "Processing geopackage..."

  fulcrum geopackage $FULCRUM_GPKG_ARGS

  ogr2ogr -f CSV -overwrite "/data/csv" "/data/geopackage/$FULCRUM_GPKG_NAME.gpkg" -lco GEOMETRY=AS_XY
fi

if [[ $FULCRUM_S3_SYNC_ENABLED != "no" ]]; then
  echo "Processing s3 sync..."

  if [ -z "$AWS_ACCESS_KEY_ID" ]; then
    error "AWS_ACCESS_KEY_ID required for s3 sync"
  fi

  if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
    error "AWS_SECRET_ACCESS_KEY required for s3 sync"
  fi

  if [ -z "$FULCRUM_S3_SYNC_BUCKET" ]; then
    error "FULCRUM_S3_SYNC_BUCKET required for s3 sync"
  fi

  /usr/local/bin/aws s3 sync /data s3://$FULCRUM_S3_SYNC_BUCKET
fi
