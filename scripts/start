#!/bin/bash

export FULCRUM_DATA_PATH=/data/db
export FULCRUM_MEDIA_PATH=/data

error () {
  echo $1
  exit
}


if [ -z "$FULCRUM_ORG" ]; then
  error "FULCRUM_ORG must specify the organization name"
fi

if [ -z "$FULCRUM_TOKEN" ]; then
  error "FULCRUM_TOKEN must specify the API token"
fi

export REPORTS_ENABLED=${REPORTS_ENABLED:=no}
export REPORTS_CONCURRENCY=${REPORTS_CONCURRENCY:=3}
export REPORTS_ARGS=${REPORTS_ARGS:="--file-name id"}

export MEDIA_ENABLED=${MEDIA_ENABLED:=no}
export MEDIA_CONCURRENCY=${MEDIA_CONCURRENCY:=3}

export GPKG_ENABLED=${GPKG_ENABLED:=no}
export GPKG_NAME=${GPKG_NAME:=fulcrum}
export GPKG_ARGS=${GPKG_ARGS:="--gpkg-underscore-names --gpkg-drop false --no-gpkg-user-info --no-gpkg-joined-names"}

export PG_ENABLED=${PG_ENABLED:=no}
export PG_HOST=${PG_HOST:=postgres}
export PG_PORT=${PG_PORT:=5432}
export PG_DATABASE=${PG_DATABASE:=fulcrum}
export PG_USER=${PG_USER:=postgres}
export PG_PASSWORD=${PG_PASSWORD:=postgres}
export PG_ARGS=${PG_ARGS:="--pg-underscore-names"}

# assign the psql-specific variables
export PGHOST=${PGHOST:=$PG_HOST}
export PGPORT=${PGPORT:=$PG_PORT}
export PGDATABASE=${PGDATABASE:=$PG_DATABASE}
export PGUSER=${PGUSER:=$PG_USER}
export PGPASSWORD=${PGPASSWORD:=$PG_PASSWORD}

export PLUGIN_PATH=/root/.fulcrum/plugins
export PLUGIN_PATH_DISABLED=/root/.fulcrum/plugins-disabled

mkdir -p $PLUGIN_PATH_DISABLED

disable_plugin () {
  [ -d $PLUGIN_PATH/fulcrum-desktop-$1 ] && \
    mv -f $PLUGIN_PATH/fulcrum-desktop-$1 $PLUGIN_PATH_DISABLED/fulcrum-desktop-$1
}

enable_plugin () {
  [ -d $PLUGIN_PATH_DISABLED/fulcrum-desktop-$1 ] && \
    mv -f $PLUGIN_PATH_DISABLED/fulcrum-desktop-$1 $PLUGIN_PATH/fulcrum-desktop-$1
}

disable_plugin 'postgres'
disable_plugin 'media'
disable_plugin 'reports'
disable_plugin 'geopackage'

if [[ $PG_ENABLED != "no" ]]; then
  echo "Connecting to psql $PGHOST:$PGPORT@$PGDATABASE as $PGUSER"

  /usr/local/bin/wait-for-postgres

  psql -d postgres -c "CREATE DATABASE $PGDATABASE;"

  psql -d $PGDATABASE -c 'CREATE EXTENSION IF NOT EXISTS postgis;'

  enable_plugin 'postgres'
fi

if [[ $MEDIA_ENABLED != "no" ]]; then
  enable_plugin 'media'
fi

if [[ $REPORTS_ENABLED != "no" ]]; then
  enable_plugin 'reports'
fi

if [[ $GPKG_ENABLED != "no" ]]; then
  enable_plugin 'geopackage'
fi

fulcrum setup

fulcrum sync --simple-output $PG_ARGS $SYNC_ARGS

if [[ $MEDIA_ENABLED != "no" ]]; then
  fulcrum media --concurrency $MEDIA_CONCURRENCY
fi

if [[ $REPORTS_ENABLED != "no" ]]; then
  mkdir -p /data/templates

  if [ -f /data/templates/template.ejs ] && [ -f /data/templates/footer.ejs ]; then
    fulcrum reports \
      --template "/data/templates/template.ejs" \
      --footer "/data/templates/footer.ejs" \
      --concurrency $REPORTS_CONCURRENCY \
      --report-path "/data/reports" \
      $REPORTS_ARGS
  else
    error "template.ejs and footer.ejs must exist in the templates directory"
  fi
fi

if [[ $GPKG_ENABLED != "no" ]]; then
  mkdir -p /data/geopackage

  fulcrum geopackage \
    --gpkg-path "/data/geopackage" \
    --gpkg-name "$GPKG_NAME" \
    $GPKG_ARGS

  ogr2ogr -f CSV -overwrite "/data/csv" "/data/geopackage/$GPKG_NAME.gpkg" -lco GEOMETRY=AS_XY
fi
